/* Box model */

.rubiks-loader {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

/* Constants */

$unit: 10px; // original unit: 4px
$piece-size: 3 * $unit;
$inter-piece-spacing: 1 * $unit;
$cube-size: 3 * $piece-size + 4 * $inter-piece-spacing;

$white: #e2e8e7;
$yellow: #f6c574;
$blue: #00aacf;
$green: #00b3a0;
$red: #fc5652;
$orange: #fc9f39;

$full-animation-duration: 1.5s;

/* Functions */

@function position-in-face($order) {
  @return $order * $piece-size + ($order + 1) * $inter-piece-spacing;
}
@function distance-to-kernel($x, $y) {
  @return $piece-size/2 + -1 * $x * ($piece-size + $inter-piece-spacing)
    $piece-size/2 + -1 * $y * ($piece-size + $inter-piece-spacing) -1 * ($piece-size/2 +
        $piece-size + $inter-piece-spacing);
}

/* Inheritance basis */

%space-3d {
  width: $cube-size;
  height: $cube-size;

  position: relative;
  perspective: $cube-size;
}

/* Main */

.rubiks-loader {
  @extend %space-3d;

  .cube {
    display: inline-block;
    width: 100%;
    height: 100%;
    font-size: 0; // hide text

    transform-style: preserve-3d;

    .piece {
      display: inline-block;
      width: $piece-size;
      height: $piece-size;

      position: absolute;

      backface-visibility: hidden;

      &.row-top {
        top: position-in-face(0);
      }
      &.row-center {
        top: position-in-face(1);
      }
      &.row-bottom {
        top: position-in-face(2);
      }
      &.col-left {
        left: position-in-face(0);
      }
      &.col-center {
        left: position-in-face(1);
      }
      &.col-right {
        left: position-in-face(2);
      }

      &.col-left.row-top {
        transform-origin: distance-to-kernel(-1, -1);
      }
      &.col-center.row-top {
        transform-origin: distance-to-kernel(0, -1);
      }
      &.col-right.row-top {
        transform-origin: distance-to-kernel(1, -1);
      }
      &.col-left.row-center {
        transform-origin: distance-to-kernel(-1, 0);
      }
      &.col-center.row-center {
        transform-origin: distance-to-kernel(0, 0);
      }
      &.col-right.row-center {
        transform-origin: distance-to-kernel(1, 0);
      }
      &.col-left.row-bottom {
        transform-origin: distance-to-kernel(-1, 1);
      }
      &.col-center.row-bottom {
        transform-origin: distance-to-kernel(0, 1);
      }
      &.col-right.row-bottom {
        transform-origin: distance-to-kernel(1, 1);
      }

      &.yellow {
        background-color: $yellow;
      }
      &.blue {
        background-color: $blue;
      }
      &.green {
        background-color: $green;
      }
      &.white {
        background-color: $white;
      }
      &.red {
        background-color: $red;
      }
      &.orange {
        background-color: $orange;
      }
    }

    .face {
      &.front {
      }
      &.back {
        transform: rotateY(180deg);
      }
      &.right {
        transform: rotateY(90deg);
      }
      &.left {
        transform: rotateY(-90deg);
      }
      &.up {
        transform: rotateX(90deg);
      }
      &.down {
        transform: rotateX(-90deg);
      }
    }
  }
}

/* Animations */
/* This begins to become messy & dirty... */

.rubiks-loader .piece {
  animation-duration: $full-animation-duration;
  animation-iteration-count: infinite;
}

// Step 1
@keyframes step-1-front-to-up {
  0% {
    transform: rotateX(0deg);
  }
  25%,
  100% {
    transform: rotateX(90deg);
  }
}
.rubiks-loader .face.front.piece.col-center {
  animation-name: step-1-front-to-up;
}

@keyframes step-1-down-to-front {
  0% {
    transform: rotateX(-90deg);
  }
  25%,
  100% {
    transform: rotateX(0deg);
  }
}
.rubiks-loader .face.down.piece.col-center {
  animation-name: step-1-down-to-front;
}

// Step 2
@keyframes step-2-front-to-left {
  25% {
    transform: rotateY(0deg);
  }
  50%,
  100% {
    transform: rotateY(-90deg);
  }
}
.rubiks-loader .face.piece {
  &.front.row-center.col-left,
  &.down.row-center.col-center,
  &.front.row-center.col-right {
    animation-name: step-2-front-to-left;
  }
}

@keyframes step-2-right-to-front {
  25% {
    transform: rotateY(90deg);
  }
  50%,
  100% {
    transform: rotateY(0deg);
  }
}
.rubiks-loader .face.right.piece.row-center {
  animation-name: step-2-right-to-front;
}

// Step 3
@mixin front-to-down {
  50% {
    transform: rotateX(0deg);
  }
  75%,
  100% {
    transform: rotateX(-90deg);
  }
}
@keyframes step-3-front-to-down {
  @include front-to-down;
}
@keyframes step-2-3-right-to-front-to-down {
  25% {
    transform: rotateY(90deg);
  }
  @include front-to-down;
}
.rubiks-loader .face.piece {
  &.front.row-top.col-left,
  &.front.row-bottom.col-left {
    animation-name: step-3-front-to-down;
  }
  &.right.row-center.col-left {
    animation-name: step-2-3-right-to-front-to-down;
  }
}

@keyframes step-3-up-to-front {
  50% {
    transform: rotateX(90deg);
  }
  75%,
  100% {
    transform: rotateX(0deg);
  }
}
.rubiks-loader .face.up.piece.col-left {
  animation-name: step-3-up-to-front;
}

// Step 4
@mixin front-to-right {
  75% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(90deg);
  }
}
@keyframes step-4-front-to-right {
  @include front-to-right;
}
@keyframes step-1-4-down-to-front-to-right {
  0% {
    transform: rotateX(-90deg);
  }
  25% {
    transform: rotateX(0deg);
  }
  @include front-to-right;
}
@keyframes step-3-4-up-to-front-to-right {
  50% {
    transform: rotateX(90deg);
  }
  @include front-to-right;
}
.rubiks-loader .face.piece {
  &.front.row-bottom.col-right {
    animation-name: step-4-front-to-right;
  }
  &.down.row-bottom.col-center {
    animation-name: step-1-4-down-to-front-to-right;
  }
  &.up.row-bottom.col-left {
    animation-name: step-3-4-up-to-front-to-right;
  }
}

@keyframes step-4-left-to-front {
  75% {
    transform: rotateY(-90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
.rubiks-loader .face.left.piece.row-bottom {
  animation-name: step-4-left-to-front;
}
