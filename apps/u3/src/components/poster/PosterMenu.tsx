import { ComponentPropsWithRef, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-toastify';
import DailyPosterModal from './DailyPosterModal';
import { DailyPosterLayoutProps } from './layout/DailyPosterLayout';
import { cn } from '@/lib/utils';

export default function PosterMenu({
  disabled,
  ...layoutProps
}: DailyPosterLayoutProps & { disabled?: boolean }) {
  const navigate = useNavigate();
  const [open, setOpen] = useState(false);
  return (
    <>
      <div
        className="
          flex
          h-[48px]
          px-[20px]
          py-[10px]
          justify-center
          items-center
          gap-[20px]
          rounded-[10px]
          rounded-bl-none
          rounded-br-none
        bg-[#F6F6F4]
          fixed
          bottom-[0px]
          right-[50%]
          transform
          translate-x-[56%]
          z-[20]
        "
      >
        <MenuItem id="createPosterBtn" onClick={() => setOpen(true)}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M14.6663 2.91675C15.6609 2.91675 16.6147 3.31184 17.318 4.0151C18.0213 4.71836 18.4163 5.67219 18.4163 6.66675V13.3334C18.4163 14.328 18.0213 15.2818 17.318 15.9851C16.6147 16.6883 15.6609 17.0834 14.6663 17.0834H6.33301C5.33845 17.0834 4.38462 16.6883 3.68136 15.9851C2.9781 15.2818 2.58301 14.328 2.58301 13.3334V6.66675C2.58301 5.67219 2.9781 4.71836 3.68136 4.0151C4.38462 3.31184 5.33845 2.91675 6.33301 2.91675H14.6663ZM14.6663 3.75008H6.33301C5.94999 3.75008 5.57071 3.82552 5.21685 3.9721C4.86298 4.11868 4.54145 4.33352 4.27061 4.60435C3.99978 4.87519 3.78494 5.19672 3.63836 5.55059C3.49178 5.90445 3.41634 6.28373 3.41634 6.66675V13.3334C3.41634 13.7164 3.49178 14.0957 3.63836 14.4496C3.78494 14.8034 3.99978 15.125 4.27061 15.3958C4.54145 15.6666 4.86298 15.8815 5.21685 16.0281C5.57071 16.1746 5.94999 16.2501 6.33301 16.2501H14.6663C15.0494 16.2501 15.4286 16.1746 15.7825 16.0281C16.1364 15.8815 16.4579 15.6666 16.7287 15.3958C16.9996 15.125 17.2144 14.8034 17.361 14.4496C17.5076 14.0957 17.583 13.7164 17.583 13.3334V6.66675C17.583 6.28373 17.5076 5.90445 17.361 5.55059C17.2144 5.19672 16.9996 4.87519 16.7287 4.60435C16.4579 4.33352 16.1364 4.11868 15.7825 3.9721C15.4286 3.82552 15.0494 3.75008 14.6663 3.75008ZM8.88051 9.83508L8.97801 9.94842L9.93134 11.1401C10.0335 11.2676 10.1622 11.3714 10.3085 11.4443C10.4547 11.5171 10.6151 11.5572 10.7785 11.5618C10.9418 11.5664 11.1042 11.5354 11.2544 11.4709C11.4045 11.4064 11.5389 11.31 11.648 11.1884C11.8312 10.9845 12.0542 10.8203 12.3032 10.7059C12.5523 10.5914 12.8221 10.5292 13.0961 10.5229C13.3701 10.5167 13.6425 10.5666 13.8965 10.6696C14.1505 10.7726 14.3807 10.9264 14.573 11.1217L14.6697 11.2276L16.6505 13.5509C16.7186 13.63 16.7545 13.7318 16.7512 13.8361C16.7479 13.9404 16.7055 14.0397 16.6325 14.1142C16.5595 14.1888 16.4611 14.2333 16.3569 14.2388C16.2527 14.2444 16.1502 14.2106 16.0697 14.1442L16.0155 14.0917L14.0355 11.7684C13.9269 11.6411 13.7923 11.5384 13.6408 11.4673C13.4893 11.3962 13.3244 11.3583 13.157 11.356C12.9897 11.3538 12.8238 11.3874 12.6705 11.4545C12.5172 11.5216 12.3799 11.6207 12.268 11.7451C11.9208 12.1316 11.4342 12.3644 10.9154 12.3922C10.3965 12.42 9.8879 12.2406 9.50134 11.8934L9.38634 11.7817L9.28051 11.6601L8.32717 10.4684C8.21452 10.3277 8.07276 10.213 7.91161 10.1322C7.75047 10.0514 7.57376 10.0064 7.39359 10.0003C7.21343 9.9942 7.03408 10.0271 6.86784 10.0969C6.70161 10.1666 6.55242 10.2715 6.43051 10.4042L6.36884 10.4776L4.99384 12.2251C4.92955 12.3069 4.83696 12.3618 4.73427 12.3788C4.63159 12.3958 4.52625 12.3738 4.439 12.317C4.35174 12.2603 4.28888 12.1729 4.26279 12.0722C4.23669 11.9714 4.24926 11.8645 4.29801 11.7726L4.33884 11.7101L5.71384 9.96175C5.90011 9.72497 6.13551 9.53141 6.40382 9.39441C6.67212 9.25741 6.96695 9.18023 7.26797 9.16819C7.56898 9.15615 7.86903 9.20954 8.14742 9.32467C8.42582 9.4398 8.67592 9.61394 8.88051 9.83508ZM13.833 5.83341C13.9425 5.8334 14.0508 5.85494 14.1519 5.89681C14.2531 5.93868 14.3449 6.00006 14.4223 6.07745C14.4997 6.15483 14.5611 6.2467 14.603 6.34782C14.6449 6.44893 14.6665 6.5573 14.6665 6.66675C14.6665 6.77619 14.6449 6.88457 14.603 6.98568C14.5611 7.08679 14.4997 7.17866 14.4223 7.25605C14.3449 7.33343 14.2531 7.39481 14.1519 7.43668C14.0508 7.47856 13.9425 7.5001 13.833 7.50008C13.612 7.50005 13.4001 7.41224 13.2438 7.25596C13.0876 7.09968 12.9998 6.88774 12.9998 6.66675C12.9998 6.44576 13.0876 6.23381 13.2438 6.07754C13.4001 5.92126 13.612 5.83345 13.833 5.83341Z"
              fill="#14171A"
            />
          </svg>
          <MenuText>Free Mint</MenuText>
        </MenuItem>
        <MenuLine />
        <MenuItem onClick={() => navigate('/poster-gallery')}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M5.20866 6.54159H8.50033C8.75033 6.54159 8.91699 6.37492 8.91699 6.12492C8.91699 5.87492 8.75033 5.70825 8.50033 5.70825H5.20866C4.95866 5.70825 4.79199 5.87492 4.79199 6.12492C4.79199 6.37492 5.00033 6.54159 5.20866 6.54159ZM9.45866 8.83325C9.45866 8.58325 9.29199 8.41659 9.04199 8.41659H5.20866C4.95866 8.41659 4.79199 8.58325 4.79199 8.83325C4.79199 9.08325 4.95866 9.24992 5.20866 9.24992H9.04199C9.29199 9.24992 9.45866 9.08325 9.45866 8.83325ZM5.20866 11.0416C4.95866 11.0416 4.79199 11.2083 4.79199 11.4583C4.79199 11.7083 4.95866 11.8749 5.20866 11.8749H7.12533C7.37533 11.8749 7.54199 11.7083 7.54199 11.4583C7.54199 11.2083 7.37533 11.0416 7.12533 11.0416H5.20866ZM9.75033 6.16659C9.75033 6.49992 10.0003 6.74992 10.3337 6.74992C10.667 6.74992 10.917 6.49992 10.917 6.16659C10.917 5.83325 10.667 5.58325 10.3337 5.58325C10.042 5.58325 9.75033 5.83325 9.75033 6.16659ZM8.87533 15.7499C8.70866 15.5833 8.45866 15.5833 8.29199 15.7499L7.12533 16.9166L5.95866 15.7499C5.87533 15.6666 5.75033 15.6249 5.62533 15.6249C5.50033 15.6249 5.37533 15.6666 5.29199 15.7499L4.12533 16.9166L3.12533 15.8333V3.74992C3.12533 3.29159 3.50033 2.91659 3.95866 2.91659H16.1253C16.5837 2.91659 16.9587 3.29159 16.9587 3.74992V7.95825C16.9587 8.20825 17.1253 8.37492 17.3753 8.37492C17.6253 8.37492 17.792 8.20825 17.792 7.95825V3.74992C17.792 2.83325 17.042 2.08325 16.1253 2.08325H3.95866C3.04199 2.08325 2.29199 2.83325 2.29199 3.74992V16.1249C2.29199 16.3333 2.41699 16.4583 2.58366 16.4999L3.87533 17.7916C3.95866 17.8749 4.04199 17.9166 4.16699 17.9166C4.29199 17.9166 4.37533 17.8749 4.45866 17.7916L5.62533 16.6249L6.83366 17.8333C6.91699 17.9166 7.04199 17.9583 7.12533 17.9583C7.20866 17.9583 7.33366 17.9166 7.41699 17.8333L8.58366 16.6666L9.00033 17.0833C9.16699 17.2499 9.41699 17.2499 9.58366 17.0833C9.75033 16.9166 9.75033 16.6666 9.58366 16.4999L8.87533 15.7499ZM17.8337 14.7083C17.6253 14.5833 17.3753 14.6666 17.292 14.8749C16.667 16.0416 15.4587 16.7916 14.1253 16.7916C12.167 16.7916 10.5837 15.2083 10.5837 13.2499C10.5837 11.2916 12.167 9.70825 14.1253 9.70825C15.3753 9.70825 16.542 10.3749 17.167 11.4583C17.292 11.6666 17.542 11.7083 17.7503 11.5833C17.9587 11.4583 18.0003 11.2083 17.8753 10.9999C17.0837 9.66659 15.6253 8.83325 14.0837 8.83325C11.667 8.83325 9.70866 10.7916 9.70866 13.2083C9.70866 15.6249 11.667 17.5833 14.0837 17.5833C15.7503 17.5833 17.2087 16.6666 18.0003 15.2083C18.1253 15.0833 18.042 14.8333 17.8337 14.7083ZM18.0837 12.6249C17.7503 12.6249 17.4587 12.9166 17.4587 13.2499C17.4587 13.5833 17.7503 13.8749 18.0837 13.8749C18.417 13.8749 18.7087 13.5833 18.7087 13.2499C18.7087 12.9166 18.4587 12.6249 18.0837 12.6249ZM13.5837 10.7499C13.3337 10.7499 13.167 10.9583 13.167 11.1666V13.2499C13.167 13.4999 13.3337 13.6666 13.5837 13.6666H15.667C15.8753 13.6666 16.0837 13.4999 16.0837 13.2499C16.0837 13.0416 15.8753 12.8333 15.667 12.8333H14.0003V11.1666C14.0003 10.9583 13.792 10.7499 13.5837 10.7499Z"
              fill="#14171A"
            />
          </svg>
          <MenuText>Poster Gallery</MenuText>
        </MenuItem>
        <MenuLine />
        <MenuItem onClick={() => toast.info('Coming Soon!')}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
          >
            <path
              d="M17.9575 4.24927H3.04186C2.72426 4.24927 2.4668 4.50673 2.4668 4.82433V15.1759C2.4668 15.4935 2.72426 15.7509 3.04186 15.7509H17.9575C18.2751 15.7509 18.5326 15.4935 18.5326 15.1759V4.82433C18.5326 4.50673 18.2751 4.24927 17.9575 4.24927ZM16.286 5.39938L10.4997 9.91517L4.7134 5.39938H16.286ZM3.61691 14.6008V6.00259L10.1459 11.098C10.2469 11.1769 10.3715 11.2198 10.4997 11.2197C10.6279 11.2198 10.7525 11.1769 10.8535 11.098L17.3825 6.00261V14.6008H3.61691Z"
              fill="#14171A"
            />
          </svg>
          <MenuText>Subscribe</MenuText>
        </MenuItem>
      </div>
      {DailyPosterModal && (
        <DailyPosterModal
          {...layoutProps}
          open={open}
          closeModal={() => setOpen(false)}
        />
      )}
    </>
  );
}
function MenuItem({ className, ...props }: ComponentPropsWithRef<'div'>) {
  return (
    <div
      className={cn('flex items-center gap-[10px] cursor-pointer', className)}
      {...props}
    />
  );
}
function MenuText({ className, ...props }: ComponentPropsWithRef<'span'>) {
  return (
    <span
      className={cn(
        'text-[#14171A] font-[Marion] text-[16px] not-italic font-bold leading-[normal]',
        className
      )}
      {...props}
    />
  );
}
function MenuLine({ className, ...props }: ComponentPropsWithRef<'div'>) {
  return (
    <div
      className={cn('w-[1px] h-[10px] bg-[#14171A]', className)}
      {...props}
    />
  );
}
